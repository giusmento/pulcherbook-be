name: Deploy to VPS

on:
  push:
    branches:
      - release/app
      - feat/github-action

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H -p 26 ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Create .env file
        run: |
          cat > .env << EOF
          NODE_ENV=production
          SERVICES=all

          # Database
          DB_HOST=postgres
          DB_PORT=5432
          DB_NAME=pulcherbook
          DB_USER=postgres
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          # JWT
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN=7d

          # GitHub Token for private packages
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          EOF

      - name: Create .pnpmrc file
        run: |
          cat > .npmrc << EOF
          @giusmento:registry=https://npm.pkg.github.com/
          //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
          EOF

      - name: logs
        run: |
          ls -la

      - name: Copy files to VPS
        run: |
          rsync -avz --delete -e "ssh -p 26 -o StrictHostKeyChecking=no" \
            --exclude '.git' \
            --exclude 'node_modules' \
            ./ \
            ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }}:~/pulcherbook-be/

      - name: Deploy on VPS
        run: |
          ssh -p 26 -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/pulcherbook-be

            # source env variables
            source .env

            # Stop existing containers
            podman compose down

            # Remove old images to force rebuild
            podman compose --env-file ./.env --profile single build  --no-cache

            # Start services
            podman compose --profile single up -d

            # Show running containers
            podman compose ps

            # Show logs
            podman compose logs --tail=50
          EOF

      - name: Health check
        run: |
          sleep 10
          ssh -p 26 -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} << 'EOF'
            curl -f http://localhost:8080/health || exit 1
            curl -f http://localhost:8080/api/iam/v1/health || exit 1
          EOF

      - name: Cleanup
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa
          rm -f ~/pulcherbook-be/.npmrc
